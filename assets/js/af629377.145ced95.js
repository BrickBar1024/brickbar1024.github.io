"use strict";(self.webpackChunkbrick_bar=self.webpackChunkbrick_bar||[]).push([[1208],{4137:(n,e,t)=>{t.d(e,{Zo:()=>c,kt:()=>h});var r=t(7294);function a(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function i(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function o(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?i(Object(t),!0).forEach((function(e){a(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function s(n,e){if(null==n)return{};var t,r,a=function(n,e){if(null==n)return{};var t,r,a={},i=Object.keys(n);for(r=0;r<i.length;r++)t=i[r],e.indexOf(t)>=0||(a[t]=n[t]);return a}(n,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);for(r=0;r<i.length;r++)t=i[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(a[t]=n[t])}return a}var l=r.createContext({}),p=function(n){var e=r.useContext(l),t=e;return n&&(t="function"==typeof n?n(e):o(o({},e),n)),t},c=function(n){var e=p(n.components);return r.createElement(l.Provider,{value:e},n.children)},u="mdxType",d={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},m=r.forwardRef((function(n,e){var t=n.components,a=n.mdxType,i=n.originalType,l=n.parentName,c=s(n,["components","mdxType","originalType","parentName"]),u=p(t),m=a,h=u["".concat(l,".").concat(m)]||u[m]||d[m]||i;return t?r.createElement(h,o(o({ref:e},c),{},{components:t})):r.createElement(h,o({ref:e},c))}));function h(n,e){var t=arguments,a=e&&e.mdxType;if("string"==typeof n||a){var i=t.length,o=new Array(i);o[0]=m;var s={};for(var l in e)hasOwnProperty.call(e,l)&&(s[l]=e[l]);s.originalType=n,s[u]="string"==typeof n?n:a,o[1]=s;for(var p=2;p<i;p++)o[p]=t[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},3208:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var r=t(7462),a=(t(7294),t(4137));const i={},o="2.1 \u6570\u636e\u64cd\u4f5c\u548c\u9884\u5904\u7406",s={unversionedId:"\u52a8\u624b\u5b66\u6df1\u5ea6\u5b66\u4e60v2/\u9884\u5907\u77e5\u8bc6/2.1DataManipulationPreprocessing",id:"\u52a8\u624b\u5b66\u6df1\u5ea6\u5b66\u4e60v2/\u9884\u5907\u77e5\u8bc6/2.1DataManipulationPreprocessing",title:"2.1 \u6570\u636e\u64cd\u4f5c\u548c\u9884\u5904\u7406",description:"\u6c90\u795e\u89c6\u9891\u8bb2\u89e3\uff1a\u6570\u636e\u64cd\u4f5c\u3001\u6570\u636e\u9884\u5904\u7406",source:"@site/docs/\u52a8\u624b\u5b66\u6df1\u5ea6\u5b66\u4e60v2/2.\u9884\u5907\u77e5\u8bc6/2.1DataManipulationPreprocessing.md",sourceDirName:"\u52a8\u624b\u5b66\u6df1\u5ea6\u5b66\u4e60v2/2.\u9884\u5907\u77e5\u8bc6",slug:"/\u52a8\u624b\u5b66\u6df1\u5ea6\u5b66\u4e60v2/\u9884\u5907\u77e5\u8bc6/2.1DataManipulationPreprocessing",permalink:"/docs/\u52a8\u624b\u5b66\u6df1\u5ea6\u5b66\u4e60v2/\u9884\u5907\u77e5\u8bc6/2.1DataManipulationPreprocessing",draft:!1,editUrl:"https://github.com/BrickBar1024/brickbar1024.github.io/tree/main/docs/\u52a8\u624b\u5b66\u6df1\u5ea6\u5b66\u4e60v2/2.\u9884\u5907\u77e5\u8bc6/2.1DataManipulationPreprocessing.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/docs/\u52a8\u624b\u5b66\u6df1\u5ea6\u5b66\u4e60v2/\u5f15\u8a00/Introduction"},next:{title:"2.2 \u7ebf\u6027\u4ee3\u6570",permalink:"/docs/\u52a8\u624b\u5b66\u6df1\u5ea6\u5b66\u4e60v2/\u9884\u5907\u77e5\u8bc6/2.2LinearAlgebra"}},l={},p=[{value:"\u6570\u636e\u64cd\u4f5c",id:"\u6570\u636e\u64cd\u4f5c",level:2},{value:"N\u7ef4\u6570\u7ec4",id:"n\u7ef4\u6570\u7ec4",level:3},{value:"\u521b\u5efa\u6570\u7ec4\u9700\u8981",id:"\u521b\u5efa\u6570\u7ec4\u9700\u8981",level:3},{value:"\u8bbf\u95ee\u5143\u7d20",id:"\u8bbf\u95ee\u5143\u7d20",level:3},{value:"Code",id:"code",level:3},{value:"\u6570\u636e\u64cd\u4f5c",id:"\u6570\u636e\u64cd\u4f5c-1",level:4},{value:"\u6570\u636e\u9884\u5904\u7406",id:"\u6570\u636e\u9884\u5904\u7406",level:4}],c={toc:p},u="wrapper";function d(n){let{components:e,...i}=n;return(0,a.kt)(u,(0,r.Z)({},c,i,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"21-\u6570\u636e\u64cd\u4f5c\u548c\u9884\u5904\u7406"},"2.1 \u6570\u636e\u64cd\u4f5c\u548c\u9884\u5904\u7406"),(0,a.kt)("p",null,"\u6c90\u795e\u89c6\u9891\u8bb2\u89e3\uff1a",(0,a.kt)("a",{parentName:"p",href:"https://www.bilibili.com/video/BV1CV411Y7i4/"},"\u6570\u636e\u64cd\u4f5c"),"\u3001",(0,a.kt)("a",{parentName:"p",href:"https://www.bilibili.com/video/BV1CV411Y7i4?p=3"},"\u6570\u636e\u9884\u5904\u7406")),(0,a.kt)("p",null,"\u6559\u6750\uff1a",(0,a.kt)("a",{parentName:"p",href:"https://zh-v2.d2l.ai/chapter_preliminaries/ndarray.html"},"\u6570\u636e\u64cd\u4f5c"),"\u3001",(0,a.kt)("a",{parentName:"p",href:"https://zh-v2.d2l.ai/chapter_preliminaries/pandas.html"},"\u6570\u636e\u9884\u5904\u7406")),(0,a.kt)("h2",{id:"\u6570\u636e\u64cd\u4f5c"},"\u6570\u636e\u64cd\u4f5c"),(0,a.kt)("h3",{id:"n\u7ef4\u6570\u7ec4"},"N\u7ef4\u6570\u7ec4"),(0,a.kt)("p",null,"N\u7ef4\u6570\u7ec4\u662f\u673a\u5668\u5b66\u4e60\u548c\u795e\u7ecf\u7f51\u7edc\u7684\u4e3b\u8981\u6570\u636e\u7ed3\u6784"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"img",src:t(2286).Z,width:"1002",height:"512"})),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"img",src:t(1949).Z,width:"1230",height:"666"})),(0,a.kt)("h3",{id:"\u521b\u5efa\u6570\u7ec4\u9700\u8981"},"\u521b\u5efa\u6570\u7ec4\u9700\u8981"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u5f62\u72b6\uff1a\u4f8b\u59823 x 4\u77e9\u9635"),(0,a.kt)("li",{parentName:"ul"},"\u6bcf\u4e2a\u5143\u7d20\u7684\u6570\u636e\u7c7b\u578b\uff1a\u4f8b\u598232\u4f4d\u6d6e\u70b9\u6570"),(0,a.kt)("li",{parentName:"ul"},"\u6bcf\u4e2a\u5143\u7d20\u7684\u503c\uff0c\u4f8b\u5982\u5168\u662f0\uff0c\u6216\u8005\u968f\u673a\u6570")),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"img",src:t(64).Z,width:"1070",height:"452"})),(0,a.kt)("h3",{id:"\u8bbf\u95ee\u5143\u7d20"},"\u8bbf\u95ee\u5143\u7d20"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"img",src:t(62).Z,width:"1646",height:"842"})),(0,a.kt)("h3",{id:"code"},"Code"),(0,a.kt)("p",null,"\uff08\u592a\u7b80\u5355\u4e86\uff0c\u5c31\u5199\u5728\u4e00\u8d77\u4e86"),(0,a.kt)("h4",{id:"\u6570\u636e\u64cd\u4f5c-1"},"\u6570\u636e\u64cd\u4f5c"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"# \u5bfc\u5165pytorch\nimport torch\n# \u5f20\u91cf\u8868\u793a\u4e00\u4e2a\u7531\u6570\u503c\u7ec4\u6210\u7684\u6570\u7ec4\uff0c\u8fd9\u4e2a\u6570\u7ec4\u53ef\u80fd\u6709\u591a\u4e2a\u7ef4\u5ea6\nx = torch.arange(12) # tensor([ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11])\n\n# \u53ef\u4ee5\u901a\u8fc7\u5f20\u91cf\u7684shape\u5c5e\u6027\u6765\u8bbf\u95ee\u5f20\u91cf\uff08\u6cbf\u6bcf\u4e2a\u8f74\u7684\u957f\u5ea6\uff09\u7684*\u5f62\u72b6\u548c\u5f20\u91cf\u4e2d\u5143\u7d20\u7684\u603b\u6570\nx.shape # torch.Size([12])\nx.numel() # 12\n\n# \u8981\u60f3\u6539\u53d8\u4e00\u4e2a\u5f20\u91cf\u7684\u5f62\u72b6\u800c\u4e0d\u6539\u53d8\u5143\u7d20\u6570\u91cf\u548c\u5143\u7d20\u503c\uff0c\u53ef\u4ee5\u8c03\u7528reshape\u51fd\u6570\nX = x.reshape(3, 4) # tensor([[ 0,  1,  2,  3],[ 4,  5,  6,  7],[ 8,  9, 10, 11]])\n\n# \u4f7f\u7528\u51680\u3001\u51681\u3001\u5176\u4ed6\u5e38\u91cf\uff0c\u6216\u8005\u4ece\u7279\u5b9a\u5206\u5e03\u4e2d\u968f\u673a\u91c7\u6837\u7684\u6570\u5b57\ntorch.zeros((2, 3, 4))\ntorch.ones((2, 3, 4))\ntorch.randn(3, 4)\n\n# \u901a\u8fc7\u63d0\u4f9b\u5305\u542b\u6570\u503c\u7684Python\u5217\u8868\uff08\u6216\u5d4c\u5957\u5217\u8868\uff09\uff0c\u6765\u4e3a\u6240\u9700\u5f20\u91cf\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u8d4b\u4e88\u786e\u5b9a\u503c\ntorch.tensor([[2, 1, 4, 3], [1, 2, 3, 4], [4, 3, 2, 1]])\n\n#\u5e38\u89c1\u7684\u6807\u51c6\u7b97\u672f\u8fd0\u7b97\u7b26\uff08+\u3001-\u3001*\u3001/\u548c**\uff09\u90fd\u53ef\u4ee5\u88ab\u5347\u7ea7\u4e3a\u6309\u5143\u7d20\u8fd0\u7b97\nx = torch.tensor([1.0, 2, 4, 8])\ny = torch.tensor([2, 2, 2, 2])\nx + y, x - y, x * y, x / y, x ** y \n# \u201c\u6309\u5143\u7d20\u201d\u65b9\u5f0f\u53ef\u4ee5\u5e94\u7528\u66f4\u591a\u7684\u8ba1\u7b97\ntorch.exp(x)\n\n# \u53ef\u4ee5\u628a\u591a\u4e2a\u5f20\u91cf\u8fde\u7ed3\uff08concatenate\uff09\u5728\u4e00\u8d77\nX = torch.arange(12, dtype=torch.float32).reshape((3,4))\nY = torch.tensor([[2.0, 1, 4, 3], [1, 2, 3, 4], [4, 3, 2, 1]])\ntorch.cat((X, Y), dim=0), torch.cat((X, Y), dim=1)\n# (tensor([[ 0.,  1.,  2.,  3.],\n#          [ 4.,  5.,  6.,  7.],\n#          [ 8.,  9., 10., 11.],\n#          [ 2.,  1.,  4.,  3.],\n#          [ 1.,  2.,  3.,  4.],\n#          [ 4.,  3.,  2.,  1.]]),\n# tensor([[ 0.,  1.,  2.,  3.,  2.,  1.,  4.,  3.],\n#         [ 4.,  5.,  6.,  7.,  1.,  2.,  3.,  4.],\n#         [ 8.,  9., 10., 11.,  4.,  3.,  2.,  1.]]))\n\n# \u901a\u8fc7\u903b\u8f91\u8fd0\u7b97\u7b26\u6784\u5efa\u4e8c\u5143\u5f20\u91cf\nX == Y\n# tensor([[False,  True, False,  True],\n#        [False, False, False, False],\n#        [False, False, False, False]])\n\n# \u5bf9\u5f20\u91cf\u4e2d\u7684\u6240\u6709\u5143\u7d20\u8fdb\u884c\u6c42\u548c\uff0c\u4f1a\u4ea7\u751f\u4e00\u4e2a\u5355\u5143\u7d20\u5f20\u91cf\nX.sum()\n\n# \u5373\u4f7f\u5f62\u72b6\u4e0d\u540c\uff0c\u6211\u4eec\u4ecd\u7136\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528\u5e7f\u64ad\u673a\u5236\uff08broadcasting mechanism\uff09\u6765\u6267\u884c\u6309\u5143\u7d20\u64cd\u4f5c\na = torch.arange(3).reshape((3, 1))\nb = torch.arange(2).reshape((1, 2))\n#(tensor([[0],\n#         [1],\n#         [2]]),\n# tensor([[0, 1]]))\na + b\n# tensor([[0, 1],\n#        [1, 2],\n#        [2, 3]])\n\n# \u53ef\u4ee5\u7528[-1]\u9009\u62e9\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u53ef\u4ee5\u7528[1:3]\u9009\u62e9\u7b2c\u4e8c\u4e2a\u548c\u7b2c\u4e09\u4e2a\u5143\u7d20\nX[-1], X[1:3]\n# (tensor([ 8.,  9., 10., 11.]),\n# tensor([[ 4.,  5.,  6.,  7.],\n#         [ 8.,  9., 10., 11.]]))\n\n# \u9664\u8bfb\u53d6\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a\u7d22\u5f15\u6765\u5c06\u5143\u7d20\u5199\u5165\u77e9\u9635\nX[1, 2] = 9\n\n# \u4e3a\u591a\u4e2a\u5143\u7d20\u8d4b\u503c\u76f8\u540c\u7684\u503c\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7d22\u5f15\u6240\u6709\u5143\u7d20\uff0c\u7136\u540e\u4e3a\u5b83\u4eec\u8d4b\u503c\nX[0:2, :] = 12\n\n# \u8fd0\u884c\u4e00\u4e9b\u64cd\u4f5c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e3a\u65b0\u7ed3\u679c\u5206\u914d\u5185\u5b58\nbefore = id(Y)\nY = Y + X\nid(Y) == before # False\n\n# \u6267\u884c\u539f\u5730\u64cd\u4f5c\nZ = torch.zeros_like(Y)\nprint('id(Z):', id(Z))\nZ[:] = X + Y\nprint('id(Z):', id(Z))\n# id(Z): 139931132035296 id(Z): 139931132035296\n\n# \u5982\u679c\u5728\u540e\u7eed\u8ba1\u7b97\u4e2d\u6ca1\u6709\u91cd\u590d\u4f7f\u7528X\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528X[:] = X + Y\u6216X += Y\u6765\u51cf\u5c11\u64cd\u4f5c\u7684\u5185\u5b58\u5f00\u9500\nbefore = id(X)\nX += Y\nid(X) == before # True\n\n# \u8f6c\u6362\u4e3aNumPy\u5f20\u91cf\uff08ndarray\uff09\nA = X.numpy()\nB = torch.tensor(A)\ntype(A), type(B) # (numpy.ndarray, torch.Tensor)\n\n# \u5c06\u5927\u5c0f\u4e3a1\u7684\u5f20\u91cf\u8f6c\u6362\u4e3aPython\u6807\u91cf\na = torch.tensor([3.5])\na, a.item(), float(a), int(a) # (tensor([3.5000]), 3.5, 3.5, 3)*\n\n")),(0,a.kt)("h4",{id:"\u6570\u636e\u9884\u5904\u7406"},"\u6570\u636e\u9884\u5904\u7406"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"# \u521b\u5efa\u4e00\u4e2a\u4eba\u5de5\u6570\u636e\u96c6\uff0c\u5e76\u5b58\u50a8\u5728CSV\uff08\u9017\u53f7\u5206\u9694\u503c\uff09\u6587\u4ef6\nimport os\n\nos.makedirs(os.path.join('..', 'data'), exist_ok=True)\ndata_file = os.path.join('..', 'data', 'house_tiny.csv')\nwith open(data_file, 'w') as f:\n    f.write('NumRooms,Alley,Price\\n')\n    f.write('NA,Pave,127500\\n')\n    f.write('2,NA,106000\\n')\n    f.write('4,NA,178100\\n')\n    f.write('NA,NA,140000\\n')\n\n# \u4ece\u521b\u5efa\u7684CSV\u6587\u4ef6\u4e2d\u52a0\u8f7d\u539f\u59cb\u6570\u636e\u96c6\nimport pandas as pd\n\ndata = pd.read_csv(data_file)\nprint(data)\n# NumRooms Alley   Price\n# 0       NaN  Pave  127500\n# 1       2.0   NaN  106000\n# 2       4.0   NaN  178100\n# 3       NaN   NaN  140000\n\n# \u4e3a\u4e86\u5904\u7406\u7f3a\u5931\u7684\u6570\u636e\uff0c\u5178\u578b\u7684\u65b9\u6cd5\u5305\u62ec\u63d2\u503c\u6cd5\u548c\u5220\u9664\u6cd5\uff0c\u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u8003\u8651\u63d2\u503c\u6cd5\ninputs, outputs = data.iloc[:, 0:2], data.iloc[:, 2]\ninputs = inputs.fillna(inputs.mean())\nprint(inputs)\n# NumRooms Alley\n# 0       3.0  Pave\n# 1       2.0   NaN\n# 2       4.0   NaN\n# 3       3.0   NaN\n\n# \u5bf9\u4e8einputs\u4e2d\u7684\u7c7b\u522b\u503c\u6216\u79bb\u6563\u503c\uff0c\u6211\u4eec\u5c06\u201cNaN\u201d\u89c6\u4e3a\u4e00\u4e2a\u7c7b\u522b\ninputs = pd.get_dummies(inputs, dummy_na=True)\nprint(inputs)\n# NumRooms  Alley_Pave  Alley_nan\n# 0       3.0           1          0\n# 1       2.0           0          1\n# 2       4.0           0          1\n# 3       3.0           0          1\n\n# \u73b0\u5728inputs\u548coutputs\u4e2d\u7684\u6240\u6709\u6761\u76ee\u90fd\u662f\u6570\u503c\u7c7b\u578b\uff0c\u5b83\u4eec\u53ef\u4ee5\u8f6c\u6362\u4e3a\u5f20\u91cf\u683c\u5f0f\nX, y = torch.tensor(inputs.values), torch.tensor(outputs.values)\nX, y\n# (tensor([[3., 1., 0.],\n#         [2., 0., 1.],\n#         [4., 0., 1.],\n#         [3., 0., 1.]], dtype=torch.float64),\n# tensor([127500, 106000, 178100, 140000]))\n")))}d.isMDXComponent=!0},2286:(n,e,t)=>{t.d(e,{Z:()=>r});const r=t.p+"assets/images/img-caebb3ab5140dd437b84ad72b74e3cd4.png"},1949:(n,e,t)=>{t.d(e,{Z:()=>r});const r=t.p+"assets/images/img1-8cbc779930ad38245e08907bced0717e.png"},64:(n,e,t)=>{t.d(e,{Z:()=>r});const r=t.p+"assets/images/img2-df97c9d3386b82b64230dfd8f29c653c.png"},62:(n,e,t)=>{t.d(e,{Z:()=>r});const r=t.p+"assets/images/img3-88ed05500dd442e31e6fc8835cb4545e.png"}}]);